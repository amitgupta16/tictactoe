{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","isX","stepNumber","slice","newSquares","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","sq","arraylist","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"wNAIA,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,Q,IAKPC,E,kKACJ,SAAaC,GAAI,IAAD,OACd,OACE,cAACN,EAAD,CACEI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,oBAKxC,WACE,OACE,gCACE,sBAAKJ,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GA1BTC,IAAMC,WAiCpBC,E,kDACJ,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CACXC,QAAS,CAAC,CAAEN,QAASO,MAAM,GAAGC,KAAK,QACnCC,KAAK,EACLC,WAAY,GALG,E,+CASnB,SAAYZ,GACV,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAGZ,KAAKM,MAAMK,WAAa,GAE9DE,EADUN,EAAQA,EAAQO,OAAS,GACdb,QAAQW,QAE/BG,EAAgBF,IAAeA,EAAWd,KAG9Cc,EAAWd,GAAKC,KAAKM,MAAMI,IAAM,IAAM,IAEvCV,KAAKgB,SAAS,CACZT,QAASA,EAAQU,OAAO,CAAC,CAAEhB,QAASY,KACpCF,WAAYJ,EAAQO,OACpBJ,KAAMV,KAAKM,MAAMI,S,oBAIrB,SAAOQ,GACLlB,KAAKgB,SAAS,CACZL,WAAYO,EACZR,IAAKQ,EAAO,IAAM,M,oBAItB,WAAU,IAeJC,EAfG,OACHZ,EAAUP,KAAKM,MAAMC,QACrBa,EAAUb,EAAQP,KAAKM,MAAMK,YAE3BU,EAASN,EAAgBK,EAAQnB,SAEnCqB,EAAQf,EAAQgB,KAAI,SAACL,EAAMM,GAC7B,IAAIC,EAAOD,EAAO,eAAiBA,EAAO,cAC1C,OACE,6BACE,wBAAQ5B,QAAS,kBAAM,EAAK8B,OAAOF,IAAnC,SAA2CC,KADpCD,MAab,OALEL,EADEE,EACO,WAAaA,EAEb,eAAiBrB,KAAKM,MAAMI,IAAM,IAAM,KAIjD,sBAAKf,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACEG,QAASmB,EAAQnB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAK4B,YAAY5B,QAGrC,sBAAKJ,UAAU,YAAf,UACE,8BAAMwB,IACN,6BAAKG,c,GAlEInB,IAAMC,WA2EzB,SAASW,EAAgBa,GAYvB,IAXA,IAAIC,EAAY,CACd,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGA9B,EAAI,EAAGA,EAAI8B,EAAUf,OAAQf,IAAK,CACzC,kBAAgB8B,EAAU9B,GAA1B,GAAK+B,EAAL,KAAQC,EAAR,KAAWC,EAAX,KACA,GAAIJ,EAAGE,KAAOF,EAAGG,IAAMH,EAAGE,KAAOF,EAAGI,GAClC,OAAOJ,EAAGE,GAGd,OAAO,KApBTG,IAASC,OAAO,cAAC7B,EAAD,IAAU8B,SAASC,eAAe,W","file":"static/js/main.8d262f72.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{ squares: Array(9).fill(null) }],\r\n      isX: true,\r\n      stepNumber: 0,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const newSquares = current.squares.slice();\r\n\r\n    if (calculateWinner(newSquares) || newSquares[i]) {\r\n      return;\r\n    }\r\n    newSquares[i] = this.state.isX ? \"X\" : \"O\";\r\n\r\n    this.setState({\r\n      history: history.concat([{ squares: newSquares }]),\r\n      stepNumber: history.length,\r\n      isX: !this.state.isX,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      isX: step % 2 === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let history = this.state.history;\r\n    let current = history[this.state.stepNumber];\r\n\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    let moves = history.map((step, move) => {\r\n      let desc = move ? \"Go to Step #\" + move : \"Start Again\";\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \"Next turn: \" + (this.state.isX ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n\r\nfunction calculateWinner(sq) {\r\n  let arraylist = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  for (let i = 0; i < arraylist.length; i++) {\r\n    let [a, b, c] = arraylist[i];\r\n    if (sq[a] === sq[b] && sq[a] === sq[c]) {\r\n      return sq[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n"],"sourceRoot":""}